{
  "name": "wildlife-licencing-service",
  "type": "module",
  "engines": {
    "node": ">=16.13.0"
  },
  "devDependencies": {
    "@babel/plugin-transform-modules-commonjs": "^7.16.0",
    "@babel/preset-env": "^7.16.0",
    "eslint": "^8.2.0",
    "eslint-plugin-jest": "^25.2.4",
    "husky": "^7.0.4",
    "jest": "^27.3.1",
    "jest-circus": "^27.3.1",
    "lerna": "^4.0.0",
    "prettier-standard": "^16.4.1",
    "standard": "^16.0.4"
  },
  "scripts": {
    "postinstall": "npm run lerna:bootstrap",
    "test": "jest",
    "test:only-changed": "jest --changedSince develop",
    "test:watch": "jest --watch",
    "lint": "eslint packages/**/*.js",
    "format": "prettier-standard --format",
    "precommit": "lint-staged",
    "lerna:clean": "lerna clean --yes",
    "lerna:bootstrap": "lerna bootstrap"
  },
  "husky": {
    "hooks": {
      "pre-commit": "echo \"[Husky] pre-commit\""
    }
  },
  "standard": {
    "env": {
      "node": true,
      "jest": true
    }
  },
  "eslintConfig": {
    "extends": "standard",
    "env": {
      "node": true,
      "jest": true,
      "es6": true,
      "es2021": true
    },
    "ignorePatterns": [
      "**/dist/*.js"
    ],
    "parserOptions": {
      "sourceType": "module"
    },
    "plugins": [
      "jest"
    ]
  },
  "lint-staged": {
    "*": [
      "prettier-standard --lint"
    ]
  },
  "babel": {
    "env": {
      "test": {
        "plugins": [
          "@babel/plugin-transform-modules-commonjs"
        ]
      }
    }
  },
  "jest": {
    "collectCoverage": true,
    "collectCoverageFrom": [
      "**/src/**/*.js"
    ],
    "coveragePathIgnorePatterns": [
      "packages/eps/api/src/index.js"
    ],
    "coverageReporters": [
      "lcov",
      "text"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 85,
        "functions": 85,
        "lines": 85,
        "statements": 85
      }
    },
    "projects": [
      "<rootDir>/packages/*"
    ],
    "testEnvironment": "node",
    "testRunner": "jest-circus/runner",
    "silent": true
  }
}
