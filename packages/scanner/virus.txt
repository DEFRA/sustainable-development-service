The virus checker will run in a container. We will use the standard clam image to build a container in our local stack. This same image will be added to the front end cluster in the ECS environment. We will use the clamd scan.

It will share a volume (EFS in AWS) with our front end, using a docker volume mount to expose an area directory for virus scanning. This will be configurable by an environment variable but initially set to /scandir

The image to use is clamav/clamav which will refresh the signature file daily. This will be added to the docker/cloud-services.yml configuration and use port 3310 by default. We will not use the sockets for now so we will also need the following configuration:

name "clamd_container"

volume virus-db:/var/lib/clamav

volume source=scandir,target=/scandir

Please explore the documentation for the container here: https://docs.clamav.net/manual/Installing/Docker.html 

We also need to build a service in wls-web to allow front end handlers to invoke the virus check and obtain a scan result. For this use https://www.npmjs.com/package/clamscan 

An example of the minimal configuration is 

{
    removeInfected: false,
    clamdscan: {
        socket: false,
        host: 'host.docker.internal', // IP of host to connect to TCP interface
        port: 3310, // Port of host to use when connecting via TCP interface
        timeout: 60000 // Timeout for scanning files
    },
    preference: 'clamdscan'



But please check all the options. Options will need be extracted to environment variables and have some defaults (Probably as above)



Unit tests as usual. This will be integrated into the method statement upload journey. 



Use the following content to test for an infection: 



X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*