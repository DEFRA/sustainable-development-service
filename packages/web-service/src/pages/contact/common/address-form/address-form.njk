{% extends "standard-form.njk" %}
{% from "input/macro.njk" import govukInput %}

{% block topNavigation %}
<p class="govuk-body sdds-save-link">
    <a class="govuk-link govuk-link--no-visited-state" href="/applications">Save and return later</a>
</p>
{% endblock %}

{% set errorMap = {
        'address-line-1': {
            'string.empty': { ref: '#address-line-1', text: 'Enter building and street' },
            'string.pattern.base': { ref: '#address-line-1', text: 'Enter the building and street using only letters, numbers, spaces, \',\' \'-\' and \'.\'' }
        },
        'address-line-2': {
            'string.pattern.base': { ref: '#address-line-2', text: 'Enter the locality using only letters, spaces, \',\' \'-\' and \'.\'' }
        },
        'address-town': {
            'string.empty': { ref: '#address-town', text: 'Enter a town or city' },
            'string.pattern.base': { ref: '#address-town', text: 'Enter the town or city using only letters, spaces, \',\' \'-\' and \'.\'' }
        },
        'address-county': {
            'string.pattern.base': { ref: '#address-county', text: 'Enter the county using only letters and spaces' }
        },
        'address-postcode': {
            'string.pattern.base': { ref: '#address-postcode', text: 'Enter a valid UK postcode' }
        }
    }
%}

{% block pageContent %}
  {{ govukInput({
    label: {
      text: 'Building and street'
    },
    id: "address-line-1",
    name: "address-line-1",
    value: data.addressLine1 if data.addressLine1 else payload['address-line-1'],
    autocomplete: "address-line1",
    attributes: { maxlength: "80" },
    errorMessage: { text: 'Enter building and street' } if error['address-line-1']
  }) }}

  {{ govukInput({
    label: {
      text: 'Locality (optional)'
    },
    id: "address-line-2",
    name: "address-line-2",
    value: data.addressLine2 if data.addressLine1 else payload['address-line-2'],
    autocomplete: "address-line2",
    attributes: { maxlength: "80" },
    errorMessage: { text: 'Enter locality' } if error['address-line-2']
  }) }}

  {{ govukInput({
    label: {
      text: "Town or city"
    },
    classes: "govuk-!-width-two-thirds",
    id: "address-town",
    name: "address-town",
    value: data.town if data.town else payload['address-town'],
    autocomplete: "address-level2",
    attributes: { maxlength: "80" },
    errorMessage: { text: 'Enter town or city' } if error['address-town']
  }) }}

  {{ govukInput({
    label: {
      text: "County (optional)"
    },
    classes: "govuk-!-width-two-thirds",
    id: "address-county",
    name: "address-county",
    value: data.county if data.county else payload['address-county'],
    attributes: { maxlength: "80" },
    errorMessage: { text: 'Enter county' } if error['address-county']
  }) }}

  {% if data.postCode %}
    {{ govukInput({
      label: {
        text: "Postcode"
      },
      classes: "govuk-!-width-one-quarter",
      id: "address-postcode",
      name: "address-postcode",
      value: data.postcode if data.postcode else payload['address-postcode'],
      attributes: { maxlength: "10" },
      errorMessage: { text: 'Enter postcode' } if error['address-postcode']
    }) }}
  {% endif %}
{% endblock %}
