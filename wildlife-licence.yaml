openapi: 3.0.0
info:
  description: Wildlife Licencing API definition
  version: 1.0.0
  title: Wildlife Licencing
  contact:
    email: graham.willis@defra.gov.uk
  license:
    name: The Open Government Licence (OGL) Version 3
    url: www.nationalarchives.gov.uk/doc/open-government-licence/version/3
paths:
  "/user/{userId}":
    get:
      description: reterive user object
      parameters:
        - name: userId
          in: path
          description: ID of the appliciant
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        200:
          description: An appliciant object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        400:
          description: Bad request. user ID must be a uuid
        401:
          description: Unauthorized
        404:
          description: An user with the specified ID was not found
        500:
          description: Unexpected error on server

  "/applicant/{userId}/applications":
    get:
      description: get a list of applications created by a given user
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
      responses:
        200:
          description: An array of application objects
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/applications'
        400:
          description: Bad request. user ID must be a uuid
        401:
          description: Unauthorized
        404:
          description: An user with the specified user ID was not found
        500:
          description: Unexpected error on server

  "/applicant/{userId}/application/{applicationId}":
    get:
      description: an applications created by a specific applicant
      parameters:
        - name: userId
          in: path
          description: ID of the user
          required: true
          schema:
            $ref: '#/components/schemas/uuid'
        - name: applicationId
          in: path
          description: ID of the application
          required: true
          schema:
            $ref: '#/components/schemas/uuid'

      responses:
        200:
          description: An application object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
        400:
          description: Bad request.
        401:
          description: Unauthorized
        404:
          description: The specified user ID and application ID was not found
        500:
          description: Unexpected error on server

components:
  schemas:
    user:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/uuid'
        details:
          $ref: '#/components/schemas/person'

    applications:
      type: array
      items:
        $ref: '#/components/schemas/application'

    licenceType:
      type: string
      enum:
        - classLicence
        - individualLicence
        - mitigationLicence

    application:
      required:
        - id
        - userApplication
        - role
        - licenceType
        - licence
      properties:
        id:
          $ref: '#/components/schemas/uuid'
        role:
          $ref: '#/components/schemas/userApplicationRole'
        userApplication:
          oneOf:
            - $ref: '#/components/schemas/applicant'
            - $ref: '#/components/schemas/agent'
          discriminator:
            propertyName: role
        licenceType:
          $ref: '#/components/schemas/licenceType'
        licence:
          oneOf:
            - $ref: '#/components/schemas/classLicence'
            - $ref: '#/components/schemas/individualLicence'
            - $ref: '#/components/schemas/mitigationLicence'
          discriminator:
            propertyName: licenceType

    agent:
      type: object
      properties:
        appliciant:
          $ref: '#/components/schemas/person'

    applicant:
      type: object

    userApplicationRole:
      type: string
      enum:
        - applicant
        - agent

    person:
      type: object
      required:
        [firstname, lastname]
      properties:
        firstname:
          type: string
          minLength: 1
          maxLength: 36
        lastname:
          type: string
          minLength: 1
          maxLength: 36
        address:
          $ref:  '#/components/schemas/address'
        email:
          $ref:  '#/components/schemas/email'
        company:
          $ref: '#/components/schemas/company'

    company:
      type: object
      required: [name]
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 36
        address:
          $ref: '#/components/schemas/address'

    address:
      type: object
      required: [addrLine1, addrline3, postcode]
      properties:
        addrline1:
          type: string
          minLength: 1
          maxLength: 36
        addrline2:
          type: string
          minLength: 1
          maxLength: 36
        addrline3:
          type: string
          minLength: 1
          maxLength: 36
        postcode:
          type: string
          minLength: 1
          maxLength: 10

    licenceCodes:
      type: string
      enum:
        - A13
        - A14

    work:
      type: object
      required:
        - description
        - type
        - reason
        - phasedOrMultiplot
        - homeImprovments
        - smallDevelopments
        - protecedBuildings
        - publicBuildings
        - importantPopulations
      properties:
        description:
          type: string
          minLength: 1
          maxLength: 36
        type:
          $ref: '#/components/schemas/workType'
        reason:
          $ref: '#/components/schemas/workReason'
        phasedOrMultiplot:
          type: boolean
        homeImprovments:
          type: boolean
        smallDevelopments:
          type: boolean
        protecedBuildings:
          type: boolean
        publicBuildings:
          type: boolean
        importantPopulations:
          type: boolean

    workType:
      type: string
      enum:
        - Agriculture / Farming / Fishing / Forestry / Nature Conservation
        - Archaeological investigation
        - Barn conversion
        - Commercial
        - Communications
        - Energy generation / Energy supply
        - Flood and coastal defences
        - Health & safety
        - Heritage / Historical
        - Householder home improvements
        - Housing (non-householder)
        - Industrial / Manufacturing
        - Mineral extraction / Quarrying
        - Nationally Significant Infrastructure Projects
        - Places of worship
        - Public buildings and land
        - Tourism / Leisure
        - Transport / Highways
        - Waste management
        - Water supply and treatment / water environment

    workReason:
      type: string
      enum:
        - Imperative reasons of overriding public interest including those of a social or economic nature and beneficial consequences of primary importance for the environment
        - Preserving public health or public safety
        - Preventing serious damage to livestock, foodstuffs for livestock, crops, vegetables, fruit, growing timber, fisheries or inland waters, or any other form of property
        - Preventing the spread of disease
        - Other

    permissions:
      type: array
      items:
        $ref: '#/components/schemas/permission'

    permission:
      type: object
      required: [permissionType, reference]
      properties:
        permissionType:
          $ref: '#/components/schemas/permissionTypes'
        reference:
          type: string
          minLength: 1
          maxLength: 36

    permissionTypes:
      type: string
      enum:
        - Planning permission
        - Demolition consent
        - Listed building consent
        - Highways Act consent
        - Mineral consent
        - Conservation area consent
        - Tree preservation order
        - Utilities consent

    site:
      type: object
      required:
        - name
        - address
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 36
        address:
          $ref: '#/components/schemas/address'
        gridReference:
          $ref: '#/components/schemas/gridReference'

    gridReference:
      type: string

    classLicence:
      type: object

    individualLicence:
      type: object

    mitigationLicence:
      type: object
      properties:
        work:
          $ref: '#/components/schemas/work'
        permissions:
          $ref: '#/components/schemas/permissions'
        site:
          $ref: '#/components/schemas/site'
        licenceCode:
          $ref: '#/components/schemas/licenceCodes'
        licenceDetail:
          oneOf:
            - $ref: '#/components/schemas/a13'
            - $ref: '#/components/schemas/a14'
          discriminator:
            propertyName: licenceCode

    a13:
      type: object
      required:
        - actions
        - proposedDateFrom
        - proposedDateTo
      properties:
        actions:
          type: array
          items:
            $ref: '#/components/schemas/a13Action'
        proposedDateFrom:
          type: string
          format: date
        proposedDateTo:
          type: string
          format: date

    a13Action:
      type: object
      required:
        - a13Activity
        - a13Method
        - a13RoostType
        - maximumNumber
        - numberOfBreedingSites
        - numberOfRestingSites
      properties:
        a13Activity:
          $ref: '#/components/schemas/a13Activity'
        a13Method:
          $ref: '#/components/schemas/a13Method'
        a13RoostTypes:
          type: array
          items:
            $ref: '#/components/schemas/a13RoostType'
        maximumNumber:
          type: integer
        numberOfBreedingSites:
          type: integer
        numberOfRestingSites:
          type: integer

    a13Activity:
      type: string
      enum:
        - Capture Take
        - Destroy Resting Place
        - Destroy Breeding Site
        - Damage Breeding Site
        - Transport
        - Disturb
        - Damage Resting Place

    a13Method:
      type: string
      enum:
        - By hand
        - By static hand-held net
        - Temporary exclusion
        - Permanent exclusion
        - Destructive search by soft demolition
        - Mechanical demolition
        - Disturbance by illumination (intentional by torch)
        - Disturbance by noise or vibration
        - Temporary obstruction of roost access
        - Endoscopes

    a13RoostType:
      type: string
      enum:
        - Hibernation confirmed
        - Day
        - Transitional/Occasional
        - Feeding perch
        - Night
        - Satellite
        - Swarming or mating
        - Maternity
        - Underground - mines, caves, cellars, tunnels or bridges

    a14:
      type: object

    uuid:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
      minLength: 36
      maxLength: 36

    email:
      type: string
      pattern: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])


